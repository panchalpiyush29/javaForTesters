Real-world objects contain state and behavior.
A software object's state is stored in fields.
A software object's behavior is exposed through methods.
Hiding internal data from the outside world, and accessing it only through publicly exposed methods is known as data encapsulation.
A blueprint for a software object is called a class.
Common behavior can be defined in a superclass and inherited into a subclass using the extends keyword.
A collection of methods with no implementation is called an interface.
A namespace that organizes classes and interfaces by functionality is called a package.
The term API stands for Application Programming Interface.





Package

A package is a namespace that organizes a set of related classes and interfaces.
Conceptually you can think of packages as being similar to different folders on your computer.
You might keep HTML pages in one folder, images in another, and scripts or applications in yet another.
Because software written in the Java programming language can be composed of hundreds or thousands of individual classes, it makes
sense to keep things organized by placing related classes and interfaces into packages.